#!/bin/bash

# Stop any running dfx instances
echo "Stopping any running dfx instances..."
dfx stop >/dev/null 2>&1

# Start dfx in the background
echo "Starting dfx in the background..."
dfx start --background --clean >/dev/null 2>&1

# Deploy the Internet Identity canister locally
echo "Deploying Internet Identity canister..."
II_ENV=development dfx deploy --no-wallet --argument '(null)' internet_identity >/dev/null 2>&1

# Deploy the backend canister
echo "Deploying backend canister..."
dfx deploy certifi_backend >/dev/null 2>&1

# Get the canister IDs
BACKEND_CANISTER_ID=$(dfx canister id certifi_backend)
II_CANISTER_ID=$(dfx canister id internet_identity)

# Create or update .env file in the frontend directory
echo "# Environment variables for the frontend" > frontend/.env
echo "# Auto-generated by setup-env.sh" >> frontend/.env
echo "" >> frontend/.env
echo "# Set to 'ic' for production, 'local' for local development" >> frontend/.env
echo "REACT_APP_DFX_NETWORK=local" >> frontend/.env
echo "" >> frontend/.env
echo "# Backend canister ID" >> frontend/.env
echo "REACT_APP_CANISTER_ID=$BACKEND_CANISTER_ID" >> frontend/.env
echo "" >> frontend/.env
echo "# Host for the Internet Computer" >> frontend/.env
echo "REACT_APP_IC_HOST=http://localhost:8000" >> frontend/.env
echo "" >> frontend/.env
echo "# Internet Identity URL" >> frontend/.env
echo "REACT_APP_II_URL=http://localhost:8000/?canisterId=$II_CANISTER_ID" >> frontend/.env
echo "" >> frontend/.env
echo "# Development environment flags" >> frontend/.env
echo "SKIP_PREFLIGHT_CHECK=true" >> frontend/.env
echo "GENERATE_SOURCEMAP=false" >> frontend/.env
echo "" >> frontend/.env
echo "# Node.js environment" >> frontend/.env
echo "NODE_OPTIONS=--openssl-legacy-provider"

echo ""
echo "âœ… Setup complete!"
echo "- Backend canister ID: $BACKEND_CANISTER_ID"
echo "- Internet Identity canister ID: $II_CANISTER_ID"
echo "- Frontend environment configured in frontend/.env"
echo ""
echo "To start the frontend:"
echo "  cd frontend && npm start"
echo ""
echo "To stop dfx:"
echo "  dfx stop"
